package org.geoserver.wicket.test;

import org.apache.wicket.Component;
import org.apache.wicket.Page;
import org.apache.wicket.protocol.http.WebApplication;
import org.apache.wicket.protocol.http.WicketServlet;
import org.mortbay.jetty.Connector;
import org.mortbay.jetty.Server;
import org.mortbay.jetty.bio.SocketConnector;
import org.mortbay.jetty.servlet.Context;
import org.mortbay.jetty.servlet.ServletHolder;

/**
 * Application object for your web application.
 */
public class WicketTestApplication extends WebApplication
{    
    /**
     * Constructor
     */
	public WicketTestApplication()
	{
	}
	
	/**
	 * @see wicket.Application#getHomePage()
	 */
	public Class<?> getHomePage()
	{
		return TestHomePage.class;
	}

	/**
	 * <p>Starts a Wicket tester application that will allow for quick interactive testing
	 * of the {@link Component} generated by the factory (may be a {@link Page}, in that case the
	 * home page will redirect to it).</p>
	 * <p>The application will be hosted on path "/", port 8080</p>
	 * @param factory
	 */
	public static void start(IComponentFactory factory) {
	    start(factory, "/", 8080);
	}
	
	/**
	 * Same as {@link #start(IComponentFactory)}, but allows to specify the context path and the
	 * port 
	 * @param factory
	 * @param contextPath
	 * @param port
	 */
	public static void start(IComponentFactory factory, String contextPath, int port)  {
	    // sanity check and install the factory
	    if(factory == null) {
	        throw new NullPointerException("You must provide a non null component factory");
	    }
	    TestHomePage.componentFactory = factory;
	    
	    // setup the embedded Jetty server
        Server server = new Server();
        SocketConnector connector = new SocketConnector();
        
        // Set some timeout options to make debugging easier.
        connector.setMaxIdleTime(1000 * 60 * 60);
        connector.setSoLingerTime(-1);
        connector.setPort(port);
        server.setConnectors(new Connector[] { connector });

        // programmatically add the wicket servlet to the context
        Context root = new Context(server, contextPath ,Context.SESSIONS);
        ServletHolder wicket = new ServletHolder(WicketServlet.class);
        wicket.setInitParameter("applicationClassName", WicketTestApplication.class.getName());
        root.addServlet(wicket, "/*");

        try {
            System.out.println(">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP");
            server.start();
            while (System.in.available() == 0) {
                Thread.sleep(1000);
            }
            server.stop();
            server.join();
        } catch (Exception e) {
            e.printStackTrace();
            System.exit(100);
        }
    }
}
