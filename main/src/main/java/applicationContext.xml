<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

    <!--  
        resources
     -->
    <bean id="resourceLoader" class="org.geoserver.platform.GeoServerResourceLoader"/>
    
    <!-- extensions -->
    <bean id="extensions" class="org.geoserver.platform.GeoServerExtensions"/>
    
    <!-- geotools factory iterator provider, commented 
    <bean id="factoryIteratorProvider" depends-on="extensions" 
       class="org.geoserver.platform.GeoServerFactoryIteratorProvider"/>
     -->
       
    <!-- 
        core modules
     -->
     
    <!-- configuration module -->
        <!-- note: we use depends to ensure that all datastore plugins are 
             loaded from the spring container before processing hte catalog -->
    
    <bean id="rawCatalog" class="org.geoserver.catalog.impl.CatalogImpl"/>
    <bean id="secureCatalog" class="org.geoserver.security.SecureCatalogImpl">
        <constructor-arg ref="rawCatalog" />
    </bean>
    <!-- Switch this when you want to enable the secure catalog by default -->
    <alias name="secureCatalog" alias="catalog2"/> 
    
    <bean id="geoServer2" class="org.geoserver.config.impl.GeoServerImpl">
      <property name="catalog" ref="catalog2"/>
    </bean>
    <bean id="geoServerLoader" class="org.geoserver.config.GeoServerLoader">
      <constructor-arg ref="resourceLoader"/>
    </bean>
    
    <bean id="config"
        class="org.vfny.geoserver.global.Config">
        <property name="configuration" ref="geoServer2"/>
    </bean>
            
    <!-- geoserver module -->
    <bean id="geoServer"
        class="org.vfny.geoserver.global.GeoServer">
        <!--constructor-arg ref="config"/-->
        <constructor-arg ref="geoServer2"/>
    </bean>
    <bean id="globalConfig"
        class="org.vfny.geoserver.config.GlobalConfig">
        <constructor-arg ref="geoServer"/>
    </bean> 
    
    <!-- the old catalog -->
    <bean id="data"
        class="org.vfny.geoserver.global.Data">
        <constructor-arg ref="geoServer2"/>
    </bean>
    <!-- the old catalog, in insecure version, needed by some configuration classes -->
    <bean id="rawData"
        class="org.vfny.geoserver.global.Data">
        <constructor-arg ref="geoServer2"/>
        <constructor-arg ref="rawCatalog"/>
    </bean>
    <alias name="data" alias="catalog"/>
    
    <bean id="dataConfig"
        class="org.vfny.geoserver.config.DataConfig">
        <constructor-arg ref="rawData"/>
    </bean> 

    <!-- this registers the above modules with the servlet context
         it is around to keep the struts app happy as we move away from 
         servlets  -->
    <bean id="dataRegisterar"
        class="org.vfny.geoserver.global.GeoServerServletContextInitializer">
        
        <constructor-arg type="java.lang.String" value="DATA"/>
        <constructor-arg ref="data"/>
    </bean>
    <bean id="dataConfigRegisterar"
        class="org.vfny.geoserver.global.GeoServerServletContextInitializer">
        
        <constructor-arg type="java.lang.String" value="Config.Data"/>
        <constructor-arg ref="dataConfig"/>
    </bean>
    <bean id="globalConfigRegisterar"
        class="org.vfny.geoserver.global.GeoServerServletContextInitializer">
        
        <constructor-arg type="java.lang.String" value="Config.Global"/>
        <constructor-arg ref="globalConfig"/>
    </bean>
    
    <bean id="geoServerRegisterar"
        class="org.vfny.geoserver.global.GeoServerServletContextInitializer">
        
        <constructor-arg type="java.lang.String" value="GeoServer"/>
        <constructor-arg ref="geoServer"/>
    </bean>
    
    <!-- 
        service strategies 
    -->
    <bean id="serviceStrategyFactory" 
        class="org.vfny.geoserver.servlets.ServiceStrategyFactory">
        <constructor-arg ref="geoServer"/>
    </bean>
    
    <bean id="speedServiceStrategy" name="SPEED"
        class="org.vfny.geoserver.servlets.SpeedStrategy"/>
        
    <bean id="fileServiceStrategy" name="FILE"
        class="org.vfny.geoserver.servlets.FileStrategy"/>
        
    <bean id="bufferServiceStrategy" name="BUFFER"
        class="org.vfny.geoserver.servlets.BufferStrategy"/>
        
    <bean id="partialBufferServiceStrategy2" name="PARTIAL-BUFFER2"
        class="org.vfny.geoserver.servlets.PartialBufferStrategy2"/>
        
    <!-- 
        custom property editors
     -->
    <bean id="customEditorConfigurer" 
     class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
          <map>
              <entry key="org.geotools.util.Version">
                <bean class="org.geoserver.platform.util.VersionPropertyEditor"/>
             </entry>
          </map>
        </property>
    </bean>
        
        
    <!--  dispatcher -->
    <bean id="dispatcher" class="org.geoserver.ows.Dispatcher">
      <!-- 
        See the applicationSecurityContext document. You can safely remove this
        if in need for playing with a non secure version of Geoserver
       -->
      <property name="securityInterceptor">
        <ref bean="operationSecurityInterceptor"/>
      </property>
    </bean>

    <!-- file publisher, allows parts of the data dir to be published as static files (used
         to publish styles, www and by wcs 1.1.1 -->
    <bean id="filePublisher" class="org.geoserver.ows.FilePublisher">
      <constructor-arg ref="resourceLoader" />
    </bean>
    
  <!-- jai initializer -->
  <bean id="jaiInitializer" class="org.geoserver.jai.JAIInitializer"/>
  
  <!-- logging initializer -->
  <bean id="loggingInitializer" class="org.geoserver.logging.LoggingInitializer">
    <property name="resourceLoader" ref="resourceLoader"/>
  </bean>
  
  <!-- security wrapper factories  -->
  <bean id="defaultDataSecurityFactory" class="org.geoserver.security.decorators.DefaultSecureDataFactory"/>
  <bean id="defaultCatalogSecurityFactory" class="org.geoserver.security.decorators.DefaultSecureCatalogFactory"/>
  
  <bean id="disabledServiceChecker" class="org.geoserver.ows.DisabledServiceCheck"/>
</beans>
